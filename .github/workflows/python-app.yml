name: Python application CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Set up Python 3.12 on GitHub-hosted runner
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    # Step 3: Install dependencies (for linting and unit testing)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Step 4: Lint the code
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 5: Run unit tests with pytest (on GitHub-hosted runner)
    - name: Run unit tests with pytest
      run: |
        pytest a1/tests/unit --maxfail=1 --disable-warnings -v
    
    # Step 7: Add SSH private key from GitHub Secrets to SSH agent
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    # Step 8: Export AWS RDS URL (optional if you want to use this in EC2)
    - name: Export AWS RDS URL
      run: echo "AWS_URL=${{ secrets.AWS_URL }}" >> $GITHUB_ENV

    # Step 9: SSH into EC2 and run integration tests
    - name: SSH into EC2 and run integration tests
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@ec2-54-255-148-42.ap-southeast-1.compute.amazonaws.com '
        cd A1-Remote &&
        git pull origin main &&
        python3 -m venv venv &&
        source venv/bin/activate &&
        pip install -r requirements.txt &&
        pytest a1/tests/integration --maxfail=1 --disable-warnings -v
        '
    - name: Show test coverage
      run: |
        coverage run -m pytest
        coverage report
